[versions]
# Core
java = "21"
kotlin = "1.9.22"

# Main Dependencies
jda = "6.0.0"
jconfig = "1.1.2"
lombok = "1.18.34"

# Logging
logback = "1.5.13"
slf4j = "2.0.7"
sysoutOverSlf4j = "1.0.2"

# Database
jooq = "3.19.8"
jooqCodegen = "3.19.7"
postgresql = "42.7.3"
hikaricp = "5.1.0"

# Google APIs
googleSheetsApi = "v4-rev20220927-2.0.0"
googleApiClient = "2.2.0"
googleOauthClient = "1.34.1"
googleAuthLibrary = "1.20.0"
guava = "33.3.0-jre"

# HTTP & Web Scraping
okhttp = "5.0.0-alpha.14"
jackson = "2.17.2"
jsoup = "1.18.1"

# API & Web Framework
sparkCore = "2.9.4"
javaJwt = "4.4.0"
bouncycastle = "1.78"

# Utilities
classgraph = "4.8.171"
jemoji = "1.4.1"
jetbrainsAnnotations = "24.0.0"
oshi = "6.6.1"
serpapi = "v2.0.0"

# Testing
junit = "5.10.3"
mockito = "5.13.0"

# Build Plugins
spotless = "6.22.0"
jooqPlugin = "8.1"
shadowPlugin = "8.1.1"

[libraries]
# JDA
jda = { module = "net.dv8tion:JDA", version.ref = "jda" }
jconfig = { module = "io.github.realyusufismail:jconfig", version.ref = "jconfig" }

# Lombok
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }

# Logging
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
sysout-over-slf4j = { module = "uk.org.lidalia:sysout-over-slf4j", version.ref = "sysoutOverSlf4j" }

# Database
jooq = { module = "org.jooq:jooq", version.ref = "jooq" }
jooq-meta = { module = "org.jooq:jooq-meta", version.ref = "jooq" }
jooq-codegen = { module = "org.jooq:jooq-codegen", version.ref = "jooqCodegen" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricp" }

# Google APIs
google-sheets-api = { module = "com.google.apis:google-api-services-sheets", version.ref = "googleSheetsApi" }
google-api-client = { module = "com.google.api-client:google-api-client", version.ref = "googleApiClient" }
google-oauth-client = { module = "com.google.oauth-client:google-oauth-client-jetty", version.ref = "googleOauthClient" }
google-auth-library = { module = "com.google.auth:google-auth-library-oauth2-http", version.ref = "googleAuthLibrary" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }

# HTTP & Web Scraping
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }

# API & Web Framework
spark-core = { module = "com.sparkjava:spark-core", version.ref = "sparkCore" }
java-jwt = { module = "com.auth0:java-jwt", version.ref = "javaJwt" }
bouncycastle = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "bouncycastle" }

# Utilities
classgraph = { module = "io.github.classgraph:classgraph", version.ref = "classgraph" }
jemoji = { module = "net.fellbaum:jemoji", version.ref = "jemoji" }
jetbrains-annotations = { module = "org.jetbrains:annotations", version.ref = "jetbrainsAnnotations" }
oshi-core = { module = "com.github.oshi:oshi-core", version.ref = "oshi" }
serpapi = { module = "com.github.serpapi:google-search-results-java", version.ref = "serpapi" }

# Testing
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }

[bundles]
# Logging bundle
logging = ["logback-classic", "logback-core", "slf4j-api"]

# Database bundle
database = ["jooq", "jooq-meta", "jooq-codegen", "postgresql", "hikaricp"]

# Google APIs bundle
google = ["google-sheets-api", "google-api-client", "google-oauth-client", "google-auth-library"]

# HTTP & Web Scraping bundle
http-scraping = ["okhttp", "jackson-core", "jackson-databind", "jsoup"]

# Testing bundle
testing = ["junit-jupiter", "junit-jupiter-api", "mockito-core"]

[plugins]
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
jooq = { id = "nu.studer.jooq", version.ref = "jooqPlugin" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadowPlugin" }

