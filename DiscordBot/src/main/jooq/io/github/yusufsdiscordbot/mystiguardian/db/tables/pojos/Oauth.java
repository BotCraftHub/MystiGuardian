/*
 * This file is generated by jOOQ.
 */
package io.github.yusufsdiscordbot.mystiguardian.db.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Oauth implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String accessToken;
    private final String refreshToken;
    private final String userJson;
    private final String userId;
    private final Long id;
    private final String expiresIn;

    public Oauth(Oauth value) {
        this.accessToken = value.accessToken;
        this.refreshToken = value.refreshToken;
        this.userJson = value.userJson;
        this.userId = value.userId;
        this.id = value.id;
        this.expiresIn = value.expiresIn;
    }

    public Oauth(
        String accessToken,
        String refreshToken,
        String userJson,
        String userId,
        Long id,
        String expiresIn
    ) {
        this.accessToken = accessToken;
        this.refreshToken = refreshToken;
        this.userJson = userJson;
        this.userId = userId;
        this.id = id;
        this.expiresIn = expiresIn;
    }

    /**
     * Getter for <code>public.oauth.access_token</code>.
     */
    public String getAccessToken() {
        return this.accessToken;
    }

    /**
     * Getter for <code>public.oauth.refresh_token</code>.
     */
    public String getRefreshToken() {
        return this.refreshToken;
    }

    /**
     * Getter for <code>public.oauth.user_json</code>.
     */
    public String getUserJson() {
        return this.userJson;
    }

    /**
     * Getter for <code>public.oauth.user_id</code>.
     */
    public String getUserId() {
        return this.userId;
    }

    /**
     * Getter for <code>public.oauth.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.oauth.expires_in</code>.
     */
    public String getExpiresIn() {
        return this.expiresIn;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Oauth other = (Oauth) obj;
        if (this.accessToken == null) {
            if (other.accessToken != null)
                return false;
        }
        else if (!this.accessToken.equals(other.accessToken))
            return false;
        if (this.refreshToken == null) {
            if (other.refreshToken != null)
                return false;
        }
        else if (!this.refreshToken.equals(other.refreshToken))
            return false;
        if (this.userJson == null) {
            if (other.userJson != null)
                return false;
        }
        else if (!this.userJson.equals(other.userJson))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.expiresIn == null) {
            if (other.expiresIn != null)
                return false;
        }
        else if (!this.expiresIn.equals(other.expiresIn))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.accessToken == null) ? 0 : this.accessToken.hashCode());
        result = prime * result + ((this.refreshToken == null) ? 0 : this.refreshToken.hashCode());
        result = prime * result + ((this.userJson == null) ? 0 : this.userJson.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.expiresIn == null) ? 0 : this.expiresIn.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Oauth (");

        sb.append(accessToken);
        sb.append(", ").append(refreshToken);
        sb.append(", ").append(userJson);
        sb.append(", ").append(userId);
        sb.append(", ").append(id);
        sb.append(", ").append(expiresIn);

        sb.append(")");
        return sb.toString();
    }
}
