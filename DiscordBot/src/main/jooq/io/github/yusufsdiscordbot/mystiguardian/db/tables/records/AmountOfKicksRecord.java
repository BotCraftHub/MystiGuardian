/*
 * This file is generated by jOOQ.
 */
package io.github.yusufsdiscordbot.mystiguardian.db.tables.records;


import io.github.yusufsdiscordbot.mystiguardian.db.tables.pojos.AmountOfKicks;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AmountOfKicksRecord extends UpdatableRecordImpl<AmountOfKicksRecord> implements Record4<String, String, Long, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.amount_of_kicks.user_id</code>.
     */
    public AmountOfKicksRecord setUserId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.amount_of_kicks.user_id</code>.
     */
    public String getUserId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.amount_of_kicks.guild_id</code>.
     */
    public AmountOfKicksRecord setGuildId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.amount_of_kicks.guild_id</code>.
     */
    public String getGuildId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.amount_of_kicks.id</code>.
     */
    public AmountOfKicksRecord setId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.amount_of_kicks.id</code>.
     */
    public Long getId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.amount_of_kicks.amount_of_kicks</code>.
     */
    public AmountOfKicksRecord setAmountOfKicks(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.amount_of_kicks.amount_of_kicks</code>.
     */
    public Integer getAmountOfKicks() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, Long, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, Long, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return io.github.yusufsdiscordbot.mystiguardian.db.tables.AmountOfKicks.AMOUNT_OF_KICKS.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return io.github.yusufsdiscordbot.mystiguardian.db.tables.AmountOfKicks.AMOUNT_OF_KICKS.GUILD_ID;
    }

    @Override
    public Field<Long> field3() {
        return io.github.yusufsdiscordbot.mystiguardian.db.tables.AmountOfKicks.AMOUNT_OF_KICKS.ID;
    }

    @Override
    public Field<Integer> field4() {
        return io.github.yusufsdiscordbot.mystiguardian.db.tables.AmountOfKicks.AMOUNT_OF_KICKS.AMOUNT_OF_KICKS_;
    }

    @Override
    public String component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getGuildId();
    }

    @Override
    public Long component3() {
        return getId();
    }

    @Override
    public Integer component4() {
        return getAmountOfKicks();
    }

    @Override
    public String value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getGuildId();
    }

    @Override
    public Long value3() {
        return getId();
    }

    @Override
    public Integer value4() {
        return getAmountOfKicks();
    }

    @Override
    public AmountOfKicksRecord value1(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public AmountOfKicksRecord value2(String value) {
        setGuildId(value);
        return this;
    }

    @Override
    public AmountOfKicksRecord value3(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AmountOfKicksRecord value4(Integer value) {
        setAmountOfKicks(value);
        return this;
    }

    @Override
    public AmountOfKicksRecord values(String value1, String value2, Long value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AmountOfKicksRecord
     */
    public AmountOfKicksRecord() {
        super(io.github.yusufsdiscordbot.mystiguardian.db.tables.AmountOfKicks.AMOUNT_OF_KICKS);
    }

    /**
     * Create a detached, initialised AmountOfKicksRecord
     */
    public AmountOfKicksRecord(String userId, String guildId, Long id, Integer amountOfKicks) {
        super(io.github.yusufsdiscordbot.mystiguardian.db.tables.AmountOfKicks.AMOUNT_OF_KICKS);

        setUserId(userId);
        setGuildId(guildId);
        setId(id);
        setAmountOfKicks(amountOfKicks);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AmountOfKicksRecord
     */
    public AmountOfKicksRecord(AmountOfKicks value) {
        super(io.github.yusufsdiscordbot.mystiguardian.db.tables.AmountOfKicks.AMOUNT_OF_KICKS);

        if (value != null) {
            setUserId(value.getUserId());
            setGuildId(value.getGuildId());
            setId(value.getId());
            setAmountOfKicks(value.getAmountOfKicks());
            resetChangedOnNotNull();
        }
    }
}
